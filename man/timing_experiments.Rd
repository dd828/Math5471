% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/timing_experiments.R
\name{timing_experiments}
\alias{timing_experiments}
\title{Timing Experiments for Matrix Completion Algorithms}
\usage{
timing_experiments(
  m,
  n,
  r,
  rank,
  lambda,
  missing_rate,
  max_iter,
  tol,
  k,
  sigma
)
}
\arguments{
\item{m}{Integer. Number of rows in the matrix.}

\item{n}{Integer. Number of columns in the matrix.}

\item{r}{Integer. Operator rank, the dimension of the low-rank approximation used in algorithms.}

\item{rank}{Integer. Target rank of the matrix (ground truth rank of the synthetic matrix).}

\item{lambda}{Numeric. Regularization parameter for penalizing large values in the matrix factorization.}

\item{missing_rate}{Numeric. Proportion of elements in the matrix that are set to missing (NA).}

\item{max_iter}{Integer. Maximum number of iterations for the optimization algorithms.}

\item{tol}{Numeric. Convergence tolerance for stopping the algorithms.}

\item{k}{Integer. An integer for recording cumulative time and objective loss every \code{k} steps. Default is 1.}

\item{sigma}{Numeric. Standard deviation of the noise added to the synthetic low-rank matrix.}
}
\value{
A ggplot2 object showing the relative error as a function of computation time for the three algorithms.
}
\description{
This function performs timing experiments comparing three matrix completion algorithms: ALS (Alternating Least Squares),
Soft-Impute, and Soft-Impute-ALS. It generates a synthetic low-rank matrix, introduces noise and missing values,
applies the algorithms, and evaluates their performance in terms of computation time and relative error.
}
\details{
Relative error and computation times are recorded for each algorithm. The results are plotted, showing the
trade-offs between time and accuracy.
}
\examples{
# Example usage:
timing_experiments(
  m = 100,
  n = 100,
  r = 5,
  rank = 5,
  lambda = 0.1,
  missing_rate = 0.2,
  max_iter = 100,
  tol = 1e-4,
  k = 10,
  sigma = 0.1
)

}
