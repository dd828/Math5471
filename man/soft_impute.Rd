% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/soft_impute.R
\name{soft_impute}
\alias{soft_impute}
\title{Soft-Impute Algorithm for Matrix Completion}
\usage{
soft_impute(
  X,
  r,
  lambda,
  max_iter = 100,
  max_iter_svd = 100,
  tol = 1e-06,
  k = 1
)
}
\arguments{
\item{X}{A numeric matrix of size \code{m x n} with missing values (use \code{NA} for missing entries).}

\item{r}{An integer specifying the target rank for the low-rank approximation.}

\item{lambda}{A numeric value for the regularization parameter, controlling the soft-thresholding applied to singular values.}

\item{max_iter}{An integer specifying the maximum number of iterations for the Soft-Impute algorithm. Default is 100.}

\item{max_iter_svd}{An integer specifying the maximum number of iterations for the rank-restricted SVD solver. Default is 100.}

\item{tol}{A numeric value for the convergence tolerance. The algorithm stops if the change in the objective
loss between iterations is less than \code{tol}. Default is \code{1e-6}.}

\item{k}{An integer specifying the interval for recording cumulative time and objective loss.
Metrics are recorded every \code{k} steps or at convergence. Default is 1.}
}
\value{
A list containing the following elements:
\item{M_hat}{The completed matrix of size \code{m x n}, with missing values imputed.}
\item{times}{A numeric vector of cumulative times (in seconds) recorded at intervals or at convergence.}
\item{objectives}{A numeric vector of objective loss values recorded at intervals or at convergence.}
\item{obj_min}{The minimum objective loss achieved during the iterations.}
}
\description{
Implements the Soft-Impute algorithm for matrix completion. The algorithm uses Rank Restricted Soft SVD
algorithm with lambda=0 to do svd for X_hat.
}
\details{
The algorithm alternates between estimating the missing entries of the matrix \code{X} and performing singular value
decomposition (SVD) on the imputed matrix. Singular values are soft-thresholded using the regularization parameter \code{lambda}.
Convergence is determined by the change in the objective loss between iterations or reaching the maximum number of iterations.

The function relies on the \code{rank_restricted_soft_svd} function to perform SVD with a rank restriction.
}
\examples{
# Example usage:
set.seed(123)
X <- matrix(rnorm(100), nrow = 10)
X[sample(1:100, 20)] <- NA # Introduce missing values
result <- soft_impute(X, r = 3, lambda = 0.1)
print(result$M_hat) # Imputed matrix
plot(result$times, result$objectives, type = "o", main = "Objective Loss vs Time")

}
